name: Manual Deploy

on:
  workflow_dispatch:
    inputs:
      deploy_target:
        description: 'Choose deployment target'
        required: true
        default: 'both'
        type: choice
        options:
        - frontend
        - backend
        - both
      environment:
        description: 'Choose environment'
        required: true
        default: 'production'
        type: choice
        options:
        - production
        - staging
      skip_tests:
        description: 'Skip tests (use with caution)'
        required: false
        default: false
        type: boolean

jobs:
  frontend-manual-deploy:
    name: Manual Frontend Deploy
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.deploy_target == 'frontend' || github.event.inputs.deploy_target == 'both' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8
          run_install: false

      - name: Install dependencies
        working-directory: ./frontend
        run: pnpm install --frozen-lockfile

      - name: Run linting
        if: ${{ !inputs.skip_tests }}
        working-directory: ./frontend
        run: pnpm lint      
      - name: Build project
        working-directory: ./frontend
        run: pnpm build
        env:
          NODE_ENV: ${{ github.event.inputs.environment == 'production' && 'production' || 'staging' }}
          VITE_API_BASE_URL: ${{ secrets.VITE_API_BASE_URL }}
          VITE_STREAM_SERVER_URL: ${{ secrets.VITE_STREAM_SERVER_URL }}

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy frontend/dist --project-name=vdt-live-frontend --compatibility-date=2024-01-01

  backend-manual-deploy:
    name: Manual Backend Deploy
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.deploy_target == 'backend' || github.event.inputs.deploy_target == 'both' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4      
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Run tests
        if: ${{ !inputs.skip_tests }}
        working-directory: ./backend
        run: mvn clean test
        env:
          SPRING_DATASOURCE_URL: ${{ secrets.SPRING_DATASOURCE_URL }}
          SPRING_DATASOURCE_USERNAME: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}
          SPRING_JPA_HIBERNATE_DDL_AUTO: ${{ secrets.SPRING_JPA_HIBERNATE_DDL_AUTO }}
          SERVER_PORT: ${{ secrets.SERVER_PORT }}
          STREAM_URL_BASE: ${{ secrets.STREAM_URL_BASE }}

      - name: Build with Maven
        working-directory: ./backend
        run: mvn clean package -DskipTests=${{ inputs.skip_tests }}
        env:
          SPRING_DATASOURCE_URL: ${{ secrets.SPRING_DATASOURCE_URL }}
          SPRING_DATASOURCE_USERNAME: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}
          SPRING_JPA_HIBERNATE_DDL_AUTO: ${{ secrets.SPRING_JPA_HIBERNATE_DDL_AUTO }}
          SERVER_PORT: ${{ secrets.SERVER_PORT }}
          STREAM_URL_BASE: ${{ secrets.STREAM_URL_BASE }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: 'backend/target/*.jar'
        env:
          SPRING_DATASOURCE_URL: ${{ secrets.SPRING_DATASOURCE_URL }}
          SPRING_DATASOURCE_USERNAME: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}
          SPRING_JPA_HIBERNATE_DDL_AUTO: ${{ secrets.SPRING_JPA_HIBERNATE_DDL_AUTO }}
          SERVER_PORT: ${{ secrets.SERVER_PORT }}
          STREAM_URL_BASE: ${{ secrets.STREAM_URL_BASE }}

  notification:
    name: Deployment Notification
    runs-on: ubuntu-latest
    needs: [frontend-manual-deploy, backend-manual-deploy]
    if: always()
    
    steps:
      - name: Notify deployment status
        run: |
          echo "Manual deployment completed:"
          echo "- Target: ${{ github.event.inputs.deploy_target }}"
          echo "- Environment: ${{ github.event.inputs.environment }}"
          echo "- Skip tests: ${{ github.event.inputs.skip_tests }}"
          echo "- Frontend status: ${{ needs.frontend-manual-deploy.result || 'skipped' }}"
          echo "- Backend status: ${{ needs.backend-manual-deploy.result || 'skipped' }}"
