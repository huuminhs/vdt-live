version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: vdt-postgres-dev
    environment:
      POSTGRES_DB: vdt_live
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - vdt-dev-network

  # Backend Service (Development with hot reload)
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: vdt-backend-dev
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/vdt_live
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=admin
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SERVER_PORT=8080
      - STREAM_URL_BASE=mediamtx
      - SPRING_PROFILES_ACTIVE=dev
    ports:
      - "8080:8080"
      - "5005:5005"  # Debug port
    volumes:
      - backend_dev_uploads:/app/uploads
    depends_on:
      - postgres
    networks:
      - vdt-dev-network
    restart: unless-stopped

  # Frontend Service (Development with hot reload)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
      args:
        - VITE_API_BASE_URL=http://localhost:8080
        - VITE_STREAM_SERVER_URL=http://localhost:8889
    container_name: vdt-frontend-dev
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - vdt-dev-network
    depends_on:
      - backend
    restart: unless-stopped  # MediaMTX Streaming Server  mediamtx:
    build:
      context: .
      dockerfile: Dockerfile.mediamtx
    container_name: vdt-mediamtx-dev
    ports:
      - "8554:8554"   # RTSP
      - "1935:1935"   # RTMP
      - "8888:8888"   # HLS
      - "8889:8889"   # HTTP API
      - "8890:8890/udp" # WebRTC Data
      - "8189:8189/udp" # WebRTC Control
    volumes:
      - ./mediamtx.yml:/mediamtx.yml
    networks:
      - vdt-dev-network
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 256M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8889/v1/config"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped

volumes:
  postgres_dev_data:
    driver: local
  backend_dev_uploads:
    driver: local

networks:
  vdt-dev-network:
    driver: bridge
